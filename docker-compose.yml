services:
  gfinancas_db:
    image: "postgres:15-alpine"
    ports:
      - 15432:5432
    expose:
      - "15432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    #restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
      #- "./docker/postgres/pg_hba.conf:/usr/local/etc/postgres/postgres.conf"

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5050:5050
    expose:
      - 5050
    volumes:
      - pg-data:/var/lib/pgadmin
    environment:
      PGADMIN_LISTEN_ADDRESS: "0.0.0.0"
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_DEFAULT_SERVER: gfinancas_db
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: 123mudar!
      FORCE_SCRIPT_NAME: "/pgadmin"

  backend:
    hostname: back-gfinancas
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    #command: bash -c "python manage.py migrate --noinput && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    expose:
      - "8000"
    develop:
      watch:
        - action: rebuild
          path: ./gfinancas
    volumes:
      - ./:/app
    depends_on:
      gfinancas_db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    hostname: front-gfinancas
    command: npm run dev -- --host
    ports:
      - 3000:3000
    expose:
      - "3000"
    env_file:
      - .env
    volumes:
      - /frontend/node_modules
      - ./frontend:/frontend

  nginx:
    image: nginx
    ports:
      - 80:7999
    volumes:
      - ./docker/nginx/default_local:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

volumes:
  postgres_data:
  pg-data:
